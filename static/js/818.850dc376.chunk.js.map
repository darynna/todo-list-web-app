{"version":3,"file":"static/js/818.850dc376.chunk.js","mappings":"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","sources":["components/EmptyPageComponent/EmptyPageComponent.styled.jsx","components/EmptyPageComponent/EmptyPageComponent.jsx","components/TaskPagesTitle/TaskPagesTitle.styled.jsx","components/TaskPagesTitle/TaskPagesTitle.jsx","components/TaskSearch/TaskSearch.styled.jsx","components/TaskSearch/TaskSearch.jsx","components/TaskItem/TaskItem.styled.jsx","components/TaskItem/TaskItem.jsx","components/TasksList/TasksList.styled.jsx","components/TasksList/TasksList.jsx","pages/NotCompletedTasksPage/NotCompletedTasksPage.jsx","redux/tasks/tasksSelectors.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Paragraph = styled.p`\nwidth: 600px;\nmargin: 0 auto;\nmargin-top: 64px;\ntext-align: center;\ncolor: #1e90ff;\nfont-size: 24px;\nfont-weight: bold;\n`;","import { Paragraph } from \"./EmptyPageComponent.styled\";\n\nconst EmptyPageComponent = ({text}) => {\n\n  return (\n    <Paragraph>\n      {text}\n    </Paragraph>\n  );\n};\n\nexport default EmptyPageComponent;","import styled from \"styled-components\";\n\nexport const TaskPageTitleStyled = styled.p`\nwidth: 600px;\nmargin: 0 auto;\nmargin-top: 64px;\ntext-align: center;\ncolor: #1e90ff;\nfont-size: 24px;\nfont-weight: bold;\n`;","import { TaskPageTitleStyled } from \"./TaskPagesTitle.styled\";\n\nconst TaskPageTitle = ({text}) => {\n\n    return (\n      <TaskPageTitleStyled>\n        {text}\n      </TaskPageTitleStyled>\n    );\n  };\n  \n  export default TaskPageTitle;","import styled from 'styled-components';\n\n\nexport const InputBoxStyled = styled.div`\n margin-top: 16px;\n display: flex;\n justify-content: center;\n`;\n\nexport const InputStyled = styled.input`\n  width: 380px;\n  padding: 8px;\n  font-size: 16px;\n  border: 1px solid #0056b3\n`;\n\n\nexport const InputButtonStyled = styled.button`\n  font-size: 24px;\n  background-color: #8ed1fa;\n  color: white;\n  border: none;\n  border-radius: 3px;\n\n\n`;\n","import React, { useState } from 'react';\nimport { useDispatch} from 'react-redux';\nimport { updateSearchFilter } from '../../redux/tasks/tasksSlice';\nimport { InputStyled, InputBoxStyled, InputButtonStyled } from './TaskSearch.styled';\nimport { IoSearch } from \"react-icons/io5\";\n\nconst TaskSearch = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSearchChange = (event) => {\n    const { value } = event.target;\n    setSearchQuery(value);\n    dispatch(updateSearchFilter(value)); \n  };\n\n  return (\n    <InputBoxStyled>\n      <InputStyled \n        type=\"text\"\n        placeholder=\"Search tasks...\"\n        value={searchQuery}\n        onChange={handleSearchChange}\n      />\n      <InputButtonStyled><IoSearch /></InputButtonStyled>\n    </InputBoxStyled>\n  );\n};\n\nexport default TaskSearch;","import styled from \"styled-components\";\n\nexport const TaskListItem = styled.li`\n  width: 800px;\n  display: flex;\n  justify-content: space-between;\n  margin:0 auto;\n  // background-color: #f5f5f5;\n  background-color:  ${props => props.completed === 'true' ? '#d3d3d3' : '#f5f5f5'};\n  padding: 10px;\n  border-radius: 5px;\n  margin-bottom: 10px;\n`;\n\nexport const TaskName = styled.h3`\n  color: #0056b3;\n`;\n\n\nexport const TaskDescription = styled.p`\n  color: #333;\n  margin-bottom: 10px;\n`;\n\nexport const ActionButton = styled.button`\nwidth: 150px;\n  background-color: #1e90ff;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  cursor: pointer;\n  margin-right: 10px;\n  border-radius: 3px;\n  transition: background-color 0.3s;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n\nexport const DeleteButton = styled(ActionButton)`\n  background-color:#ff7070;\n  &:hover {\n    background-color: #e63900;\n  }\n`;\n\nexport const TaskDate = styled.p`\n  color: #333;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { completeTask, deleteTask } from \"../../redux/tasks/tasksSlice\";\nimport { TaskListItem, TaskName, TaskDescription, ActionButton, DeleteButton, TaskDate } from './TaskItem.styled';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst TaskItem = ({ date }) => {\n  const dispatch = useDispatch();\n\nconst handleToggleCompletion = () => {\n  dispatch(completeTask(date.id)); \n  Notify.success('Status of the task was changed!');\n};\n\nconst handleDelete = () => {\n  dispatch(deleteTask(date.id)); \n  Notify.success('Task was deleted!');\n};\n\nreturn (\n  <TaskListItem key={date.id} completed={date.completed ? 'true' : 'false'}>\n    <div>\n    <TaskName>{date.name}</TaskName>\n      <TaskDescription>{date.description}</TaskDescription>\n    </div>\n    <div>\n      <ActionButton onClick={handleToggleCompletion}>\n        {date.completed ? 'Mark Incomplete' : 'Complete'}\n      </ActionButton>\n      <DeleteButton onClick={handleDelete}>Delete</DeleteButton>\n      <>\n      {\n       date.dueDate !== '' ? (\n        <TaskDate>Need to be completed till: {date.dueDate}</TaskDate>\n        ) : (\n          null\n        )\n      }\n      </>\n      </div>\n  </TaskListItem>\n);\n};\n\nexport default TaskItem;","import styled from \"styled-components\";\n\nexport const TaskList = styled.ul`\n  margin-top: 18px;\n`;","import TaskItem from \"components/TaskItem/TaskItem\";\nimport { TaskList } from \"./TasksList.styled\";\n\nconst TasksList = ({array}) => {\n\n  return (\n    <TaskList>\n      {array.length !== 0 &&\n        array.map((date) => {\n\n          return (\n            <TaskItem key={date.id} date={date} \n            />\n          );\n        })}\n    </TaskList>\n  );\n};\n\nexport default TasksList;","import TasksList from \"components/TasksList/TasksList\";\nimport { useSelector } from \"react-redux\";\nimport { selectTasks } from \"../../redux/tasks/tasksSelectors\";\nimport EmptyPageComponent from \"components/EmptyPageComponent/EmptyPageComponent\";\nimport TaskSearch from \"components/TaskSearch/TaskSearch\";\nimport { selectFilter } from \"../../redux/tasks/tasksSelectors\";\nimport TaskPageTitle from \"components/TaskPagesTitle/TaskPagesTitle\";\n\nconst NotCompletedTasksPage = () => {\n    const tasksArray = useSelector(selectTasks);\n    const filter = useSelector(selectFilter)\n\n    const notcompletedTasks = tasksArray.filter(task => !task.completed  && task.name.toLowerCase().includes(filter.toLowerCase()));\n\n    return(\n        <>\n        <TaskPageTitle text={'Not Completed Tasks:'}/>\n        <TaskSearch/>\n        {notcompletedTasks.length === 0 ? (\n          <EmptyPageComponent text={\"You haven't added any tasks here yet. Use the form to create new tasks and start organizing your to-do list!\"}/>\n        ) : (\n          <TasksList array={notcompletedTasks} />\n        )}\n      </>\n    )\n    \n}\n\nexport default NotCompletedTasksPage","export const selectTasks = (state) => state.tasks.tasks;\nexport const selectFilter = (state) => state.tasks.searchFilter;"],"names":["Paragraph","styled","_templateObject","_taggedTemplateLiteral","_ref","text","_jsx","children","TaskPageTitleStyled","InputBoxStyled","InputStyled","_templateObject2","InputButtonStyled","_templateObject3","_useState","useState","_useState2","_slicedToArray","searchQuery","setSearchQuery","dispatch","useDispatch","_jsxs","type","placeholder","value","onChange","event","target","updateSearchFilter","IoSearch","TaskListItem","props","completed","TaskName","TaskDescription","ActionButton","_templateObject4","DeleteButton","_templateObject5","TaskDate","_templateObject6","date","name","description","onClick","completeTask","id","Notify","deleteTask","_Fragment","dueDate","TaskList","array","length","map","TaskItem","tasksArray","useSelector","selectTasks","filter","selectFilter","notcompletedTasks","task","toLowerCase","includes","TaskPageTitle","TaskSearch","EmptyPageComponent","TasksList","state","tasks","searchFilter"],"sourceRoot":""}